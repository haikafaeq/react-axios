{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Haikylez\\\\Documents\\\\Work\\\\myapp2\\\\src\\\\components\\\\dashboard\\\\TestChart2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from 'axios';\n\nconst TestChart2 = () => {\n  _s();\n\n  const [chartData, setChartData] = useState([]);\n  const [employeeSalary, setEmployeeSalary] = useState([]);\n  const [employeeAge, setEmployeeAge] = useState([]);\n\n  const chart = () => {\n    axios.get('https://gist.githubusercontent.com/haikafaeq/01db9b03b5d69aff742bb33e558f70d2/raw/54be92f85d204d9d798404e6cc831ab91d1ae819/testChart.json').then(res => {\n      console.log(res);\n      setEmployeeSalary(res.data);\n      setEmployeeAge(res.data);\n\n      for (const dataObj of res.data.data) {\n        employeeSalary.push(parseInt(dataObj.employee_salary));\n        employeeAge.push(parseInt(dataObj.employee_age));\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n    console.log(employeeSalary, employeeAge);\n    setChartData({\n      labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n      datasets: [{\n        label: \"level of thiccness\",\n        data: [32, 45, 12, 76, 69],\n        backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n        borderWidth: 4\n      }]\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test Chart using API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"500px\",\n        width: \"500px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          responsive: true,\n          title: {\n            text: \"THICCNESS SCALE\",\n            display: true\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                autoSkip: true,\n                maxTicksLimit: 10,\n                beginAtZero: true\n              },\n              gridLines: {\n                display: false\n              }\n            }],\n            xAxes: [{\n              gridLines: {\n                display: false\n              }\n            }]\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TestChart2, \"t8F8mENRILeB5iNyhgoxvLyJJ7I=\");\n\n_c = TestChart2;\nexport default TestChart2;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestChart2\");","map":{"version":3,"sources":["C:/Users/Haikylez/Documents/Work/myapp2/src/components/dashboard/TestChart2.js"],"names":["React","useState","useEffect","Line","axios","TestChart2","chartData","setChartData","employeeSalary","setEmployeeSalary","employeeAge","setEmployeeAge","chart","get","then","res","console","log","data","dataObj","push","parseInt","employee_salary","employee_age","catch","err","labels","datasets","label","backgroundColor","borderWidth","height","width","responsive","title","text","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from 'axios';\r\n\r\nconst TestChart2 = () => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [employeeSalary, setEmployeeSalary] = useState([]);\r\n  const [employeeAge, setEmployeeAge] = useState([]);\r\n\r\n    const chart = () => {\r\n        axios\r\n        .get('https://gist.githubusercontent.com/haikafaeq/01db9b03b5d69aff742bb33e558f70d2/raw/54be92f85d204d9d798404e6cc831ab91d1ae819/testChart.json')    \r\n        .then(res => {\r\n            console.log(res);\r\n            setEmployeeSalary(res.data);\r\n            setEmployeeAge(res.data);\r\n            for (const dataObj of res.data.data) {\r\n                employeeSalary.push(parseInt(dataObj.employee_salary));\r\n                employeeAge.push(parseInt(dataObj.employee_age));\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n        console.log(employeeSalary, employeeAge)\r\n        \r\n        setChartData({\r\n            labels: ['Monday','Tuesday','Wednesday','Thursday','Friday'],\r\n            datasets: [\r\n                {\r\n                label: \"level of thiccness\",\r\n                data: [32, 45, 12, 76, 69],\r\n                backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\r\n                borderWidth: 4\r\n                }\r\n            ]\r\n        })\r\n}\r\n  useEffect(() => {\r\n    chart();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Test Chart using API</h1>\r\n      <div style={{height: \"500px\", width: \"500px\"}} >\r\n        <Line\r\n          data={chartData}\r\n          options={{\r\n            responsive: true,\r\n            title: { text: \"THICCNESS SCALE\", display: true },\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    autoSkip: true,\r\n                    maxTicksLimit: 10,\r\n                    beginAtZero: true\r\n                  },\r\n                  gridLines: {\r\n                    display: false\r\n                  }\r\n                }\r\n              ],\r\n              xAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestChart2;"]},"metadata":{},"sourceType":"module"}